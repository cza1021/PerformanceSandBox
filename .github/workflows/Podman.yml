name: podman
on:
  pull_request:

jobs:
  podman:
    runs-on: ubuntu-latest
    env:
      KIND_EXPERIMENTAL_PROVIDER: podman kind create cluster
    steps:
      - uses: actions/checkout@main
        with:
          submodules: true
      - uses: actions/setup-go@main
        with:
          go-version: 1.18
      - name: install podman
        run: sudo apt-get -y install podman;alias docker=podman
      - name: install kind
        run: go install sigs.k8s.io/kind@v0.12.0
      - name: check version
        run: kind version
      - name: install kubectl
        run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - name: check version
        run: kubectl version || true
      - name: infra up
        run: alias docker=podman;./infra.sh up          
      - name: infra prometheus
        run: alias docker=podman;./infra.sh prometheus
      - name: infra jaeger
        run: alias docker=podman;./infra.sh jaeger
      - name: sleep as infra ready
        run: sleep 60
      - name: infra verify 
        run: alias docker=podman;./infra.sh verify
      - name: Fabric network up
        run: alias docker=podman;cd ./SUT/fabric && ./network.sh up
      - name: sleep as pod ready
        run: sleep 60  
      - name: set up fabric channel
        run: alias docker=podman;cd ./SUT/fabric && ./network.sh channel
      - name: set up chaincode pod
        run: alias docker=podman;cd ./SUT/fabric && ./network.sh chaincode deploy
      - name: invoke chaincode for test
        run: alias docker=podman;cd ./SUT/fabric && ./network.sh chaincode invoke '{"Args":["CreateAsset","5","blue","35","tom","1000"]}' 
      - name: query invoke result
        run: alias docker=podman;cd ./SUT/fabric && ./network.sh chaincode query '{"Args":["ReadAsset","5"]}'
      - name: run Tape based traffic
        run:  alias docker=podman;cd ./Traffic/fabric && ./tape.sh
      - name: sleep a while
        run: sleep 60
      - name: verify pods
        run: kubectl get po
      - name: save pod status
        run: kubectl get po | grep tape > log.out
      - name: verify tape
        run: kubectl describe po $(cat log.out|awk -F ' ' '{print $1}')
      - name: verify tape
        run: kubectl logs $(cat log.out|awk -F ' ' '{print $1}') -c tape
      - name: cleanup
        run: alias docker=podman;./infra.sh down
